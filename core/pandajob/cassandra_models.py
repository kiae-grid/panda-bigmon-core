# Panda Jobs data model for Cassandra

from cqlengine import columns
from cqlengine.models import Model

class jobs(Model):
    __compaction__ = cqlengine.SizeTieredCompactionStrategy
    __compaction_max_compaction_threshold__ = 32
    __compaction_min_compaction_threshold__ = 4
    __caching__ = CACHING_ALL
    __read_repair_chance__ = 0.0
    __dclocal_read_repair_chance__ = 0.1
    __default_time_to_live__ = 0
    __gc_grace_seconds__ = 864000
    __memtable_flush_period_in_ms__ = 0

    pandaid = columns.BigInt(primary_key=True)
    modificationtime = columns.DateTime()
    jobdefinitionid = columns.BigInt()
    schedulerid = columns.Text(max_length=384)
    pilotid = columns.Text(max_length=600)
    creationtime = columns.DateTime()
    creationhost = columns.Text(max_length=384)
    modificationhost = columns.Set(columns.Text) 
    atlasrelease = columns.Text(max_length=192)
    transformation = columns.Text(max_length=750)
    homepackage = columns.Text(max_length=240)
    prodserieslabel = columns.Text(max_length=60)
    prodsourcelabel = columns.Text(max_length=60)
    produserid = columns.Text(max_length=750)
    assignedpriority = columns.Integer()
    currentpriority = columns.Integer()
    attemptnr = columns.Integer()
    maxattempt = columns.Integer()
    jobstatus = columns.Text(max_length=45)
    jobname = columns.Text(max_length=768)
    maxcpucount = columns.Integer()
    maxcpuunit = columns.Text(max_length=96)
    maxdiskcount = columns.Integer()
    maxdiskunit = columns.Text(max_length=12)
    ipconnectivity = columns.Text(max_length=15)
    minramcount = columns.Integer()
    minramunit = columns.Text(max_length=6)
    starttime = columns.DateTime()
    endtime = columns.DateTime()
    cpuconsumptiontime = columns.BigInt()
    cpuconsumptionunit = columns.Text(max_length=384)
    commandtopilot = columns.Text(max_length=750)
    transexitcode = columns.Text(max_length=384)
    piloterrorcode = columns.Integer()
    piloterrordiag = columns.Text(max_length=1500)
    exeerrorcode = columns.Integer()
    exeerrordiag = columns.Text(max_length=1500)
    superrorcode = columns.Integer()
    superrordiag = columns.Text(max_length=750)
    ddmerrorcode = columns.Integer()
    ddmerrordiag = columns.Text(max_length=1500)
    brokerageerrorcode = columns.Integer()
    brokerageerrordiag = columns.Text(max_length=750)
    jobdispatchererrorcode = columns.Integer()
    jobdispatchererrordiag = columns.Text(max_length=750)
    taskbuffererrorcode = columns.Integer()
    taskbuffererrordiag = columns.Text(max_length=900)
    computingsite = columns.Text(max_length=384)
    computingelement = columns.Text(max_length=384)
    jobparameters = columns.Blob()
    metadata = columns.Text()
    proddblock = columns.Text(max_length=765)
    dispatchdblock = columns.Text(max_length=765)
    destinationdblock = columns.Text(max_length=765)
    destinationse = columns.Text(max_length=750)
    nevents = columns.Integer()
    grid = columns.Text(max_length=150)
    cloud = columns.Text(max_length=150)
    cpuconversion = columns.Decimal()
    sourcesite = columns.Text(max_length=108)
    destinationsite = columns.Text(max_length=108)
    transfertype = columns.Text(max_length=30)
    taskid = columns.Integer()
    cmtconfig = columns.Text(max_length=750)
    statechangetime = columns.DateTime()
    proddbupdatetime = columns.DateTime()
    lockedby = columns.Text(max_length=384)
    relocationflag = columns.Integer()
    jobexecutionid = columns.BigInt()
    vo = columns.Text(max_length=48)
    pilottiming = columns.Text(max_length=300)
    workinggroup = columns.Text(max_length=60)
    processingtype = columns.Text(max_length=192)
    produsername = columns.Text(max_length=180)
    produsername_upper = columns.Text()
    ninputfiles = columns.Integer()
    countrygroup = columns.Text(max_length=60)
    batchid = columns.Text(max_length=240)
    parentid = columns.BigInt()
    specialhandling = columns.Text(max_length=240)
    jobsetid = columns.BigInt()
    corecount = columns.Integer()
    ninputdatafiles = columns.Integer()
    jobparameteres = columns.Blob()
    metadata = columns.Blob()
    ninputdatafiles = columns.Integer()
    inputfiletype = columns.Text(max_length=96)
    inputfileproject = columns.Text(max_length=192)
    inputfilebytes = columns.BigInt()
    noutputdatafiles = columns.Integer()
    outputfilebytes = columns.BigInt()
    jobmetrics = columns.Text(max_length=1500)
    workqueue_id = columns.Integer()
    jeditaskid = columns.BigInt()
